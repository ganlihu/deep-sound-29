[2025-09-17 21:29:04] ============================================================
[2025-09-17 21:29:04] 【训练数据信息】
[2025-09-17 21:29:04] 原始X类型: <class 'list'>, 长度: 1
[2025-09-17 21:29:04] 原始y类型: <class 'list'>, 长度: 42
[2025-09-17 21:29:04] ============================================================
[2025-09-17 21:29:04] 
===== 转换样本为NumPy数组 =====
[2025-09-17 21:29:04] 样本0：已从list转换为数组，形状=(288, 1800, 1)，原始长度=288
[2025-09-17 21:29:04] 样本1：已从list转换为数组，形状=(227, 1800, 1)，原始长度=227
[2025-09-17 21:29:04] 样本2：已从list转换为数组，形状=(381, 1800, 1)，原始长度=381
[2025-09-17 21:29:04] 样本3：已从list转换为数组，形状=(428, 1800, 1)，原始长度=428
[2025-09-17 21:29:04] 样本4：已从list转换为数组，形状=(406, 1800, 1)，原始长度=406
[2025-09-17 21:29:04] 样本5：已从list转换为数组，形状=(125, 1800, 1)，原始长度=125
[2025-09-17 21:29:04] 样本6：已从list转换为数组，形状=(324, 1800, 1)，原始长度=324
[2025-09-17 21:29:04] 样本7：已从list转换为数组，形状=(202, 1800, 1)，原始长度=202
[2025-09-17 21:29:04] 样本8：已从list转换为数组，形状=(137, 1800, 1)，原始长度=137
[2025-09-17 21:29:04] 样本9：已从list转换为数组，形状=(276, 1800, 1)，原始长度=276
[2025-09-17 21:29:04] 样本10：已从list转换为数组，形状=(417, 1800, 1)，原始长度=417
[2025-09-17 21:29:04] 样本11：已从list转换为数组，形状=(455, 1800, 1)，原始长度=455
[2025-09-17 21:29:04] 样本12：已从list转换为数组，形状=(178, 1800, 1)，原始长度=178
[2025-09-17 21:29:04] 样本13：已从list转换为数组，形状=(446, 1800, 1)，原始长度=446
[2025-09-17 21:29:04] 样本14：已从list转换为数组，形状=(280, 1800, 1)，原始长度=280
[2025-09-17 21:29:04] 样本15：已从list转换为数组，形状=(835, 1800, 1)，原始长度=835
[2025-09-17 21:29:04] 样本16：已从list转换为数组，形状=(144, 1800, 1)，原始长度=144
[2025-09-17 21:29:04] 样本17：已从list转换为数组，形状=(238, 1800, 1)，原始长度=238
[2025-09-17 21:29:04] 样本18：已从list转换为数组，形状=(335, 1800, 1)，原始长度=335
[2025-09-17 21:29:04] 样本19：已从list转换为数组，形状=(475, 1800, 1)，原始长度=475
[2025-09-17 21:29:04] 样本20：已从list转换为数组，形状=(351, 1800, 1)，原始长度=351
[2025-09-17 21:29:04] 样本21：已从list转换为数组，形状=(382, 1800, 1)，原始长度=382
[2025-09-17 21:29:04] 样本22：已从list转换为数组，形状=(635, 1800, 1)，原始长度=635
[2025-09-17 21:29:04] 样本23：已从list转换为数组，形状=(337, 1800, 1)，原始长度=337
[2025-09-17 21:29:04] 样本24：已从list转换为数组，形状=(537, 1800, 1)，原始长度=537
[2025-09-17 21:29:04] 样本25：已从list转换为数组，形状=(347, 1800, 1)，原始长度=347
[2025-09-17 21:29:04] 样本26：已从list转换为数组，形状=(362, 1800, 1)，原始长度=362
[2025-09-17 21:29:04] 样本27：已从list转换为数组，形状=(355, 1800, 1)，原始长度=355
[2025-09-17 21:29:04] 样本28：已从list转换为数组，形状=(192, 1800, 1)，原始长度=192
[2025-09-17 21:29:04] 样本29：已从list转换为数组，形状=(462, 1800, 1)，原始长度=462
[2025-09-17 21:29:04] 样本30：已从list转换为数组，形状=(784, 1800, 1)，原始长度=784
[2025-09-17 21:29:04] 样本31：已从list转换为数组，形状=(479, 1800, 1)，原始长度=479
[2025-09-17 21:29:04] 样本32：已从list转换为数组，形状=(271, 1800, 1)，原始长度=271
[2025-09-17 21:29:04] 样本33：已从list转换为数组，形状=(446, 1800, 1)，原始长度=446
[2025-09-17 21:29:04] 样本34：已从list转换为数组，形状=(539, 1800, 1)，原始长度=539
[2025-09-17 21:29:04] 样本35：已从list转换为数组，形状=(443, 1800, 1)，原始长度=443
[2025-09-17 21:29:04] 样本36：已从list转换为数组，形状=(201, 1800, 1)，原始长度=201
[2025-09-17 21:29:04] 样本37：已从list转换为数组，形状=(294, 1800, 1)，原始长度=294
[2025-09-17 21:29:04] 样本38：已从list转换为数组，形状=(403, 1800, 1)，原始长度=403
[2025-09-17 21:29:04] 样本39：已从list转换为数组，形状=(697, 1800, 1)，原始长度=697
[2025-09-17 21:29:04] 样本40：已从list转换为数组，形状=(810, 1800, 1)，原始长度=810
[2025-09-17 21:29:04] 样本41：已从list转换为数组，形状=(714, 1800, 1)，原始长度=714
[2025-09-17 21:29:04] ===========================

[2025-09-17 21:29:04] 当前批次最长序列长度（窗口数）: 835
[2025-09-17 21:29:04] 
===== 处理并检查标签y =====
[2025-09-17 21:29:04] 样本0标签：形状=(288,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本1标签：形状=(227,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本2标签：形状=(381,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本3标签：形状=(428,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本4标签：形状=(406,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本5标签：形状=(125,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本6标签：形状=(324,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本7标签：形状=(202,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本8标签：形状=(137,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本9标签：形状=(276,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本10标签：形状=(417,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本11标签：形状=(455,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本12标签：形状=(178,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本13标签：形状=(446,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本14标签：形状=(280,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本15标签：形状=(835,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本16标签：形状=(144,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本17标签：形状=(238,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本18标签：形状=(335,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本19标签：形状=(475,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本20标签：形状=(351,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本21标签：形状=(382,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本22标签：形状=(635,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本23标签：形状=(337,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本24标签：形状=(537,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本25标签：形状=(347,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本26标签：形状=(362,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本27标签：形状=(355,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本28标签：形状=(192,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本29标签：形状=(462,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本30标签：形状=(784,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本31标签：形状=(479,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本32标签：形状=(271,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本33标签：形状=(446,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本34标签：形状=(539,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本35标签：形状=(443,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本36标签：形状=(201,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本37标签：形状=(294,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本38标签：形状=(403,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本39标签：形状=(697,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本40标签：形状=(810,)，类别范围=[0, 3]
[2025-09-17 21:29:04] 样本41标签：形状=(714,)，类别范围=[0, 3]
[2025-09-17 21:29:04] ===========================

[2025-09-17 21:29:04] X填充后形状: (42, 835, 1800, 1)
[2025-09-17 21:29:04] 检测到的类别: [0, 1, 2, 3], 填充类别编号: 4
[2025-09-17 21:29:04] y填充后形状: (42, 835)
[2025-09-17 21:29:05] X填充值替换为均值: -0.0002
[2025-09-17 21:29:05] 标准化后X统计: min=-18.8607, max=18.9168
[2025-09-17 21:29:05] 标准化后X极端值: 最小=-18.860653, 最大=18.916805, 均值=-0.000105, 标准差=0.688783
[2025-09-17 21:29:06] 标准化后X是否含Inf: False, 位置: (array([], dtype=int64), array([], dtype=int64), array([], dtype=int64), array([], dtype=int64))
[2025-09-17 21:29:08] 已检测到 3 个GPU，将用于分布式训练
[2025-09-17 21:29:10] 
模型初始化完成（多GPU支持），结构如下：
[2025-09-17 21:29:10] Model: "custom_model"
[2025-09-17 21:29:10] _________________________________________________________________
[2025-09-17 21:29:10]  Layer (type)                Output Shape              Param #   
[2025-09-17 21:29:10] =================================================================
[2025-09-17 21:29:10]  input1 (InputLayer)         [(None, 835, 1800, 1)]    0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  input_monitor (Lambda)      (None, 835, 1800, 1)      0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  time_distributed_cnn (TimeD  (None, 835, 1600)        14752     
[2025-09-17 21:29:10]  istributed)                                                     
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  cnn_output_monitor (Lambda)  (None, 835, 1600)        0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  gru_input_monitor (Lambda)  (None, 835, 1600)         0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  bidirectional_gru (Bidirect  (None, 835, 128)         639744    
[2025-09-17 21:29:10]  ional)                                                          
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  gru_output_monitor (Lambda)  (None, 835, 128)         0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  ffn_input_monitor (Lambda)  (None, 835, 128)          0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  time_distributed_ffn (TimeD  (None, 835, 4)           25796     
[2025-09-17 21:29:10]  istributed)                                                     
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10]  ffn_output_monitor (Lambda)  (None, 835, 4)           0         
[2025-09-17 21:29:10]                                                                  
[2025-09-17 21:29:10] =================================================================
[2025-09-17 21:29:10] Total params: 680,293
[2025-09-17 21:29:10] Trainable params: 679,652
[2025-09-17 21:29:10] Non-trainable params: 641
[2025-09-17 21:29:10] _________________________________________________________________
[2025-09-17 21:29:10] 监控批次形状 - X: (5, 835, 1800, 1), y: (5, 835)
[2025-09-17 21:29:10] 使用验证集: True, 验证比例: 0.2
[2025-09-17 21:29:10] 警告：以下监控层不存在，已自动过滤：['conv1d_1', 'bn_1', 'conv1d_2', 'bn_2', 'conv1d_3', 'bn_3', 'conv1d_4', 'bn_4', 'conv1d_5', 'bn_5', 'conv1d_6', 'bn_6']
[2025-09-17 21:29:10] 
===== 类别权重 =====
[2025-09-17 21:29:10] 类别 0 (普通类别): 样本数=1767, 权重=2.4363
[2025-09-17 21:29:10] 类别 1 (普通类别): 样本数=6427, 权重=1.3527
[2025-09-17 21:29:10] 类别 2 (普通类别): 样本数=3480, 权重=1.8400
[2025-09-17 21:29:10] 类别 3 (普通类别): 样本数=4964, 权重=1.5504
[2025-09-17 21:29:10] 类别 4 (填充类别): 样本数=18432, 权重=0.0000
[2025-09-17 21:29:10] ====================

[2025-09-17 21:29:10] 样本权重范围: [0.0000, 2.4363]
[2025-09-17 21:29:10] 
【开始训练】样本数: 42, 批次大小: 5, GPU数量: 3
[2025-09-17 21:29:11] 
===== 系统资源监控初始化 =====
[2025-09-17 21:29:11] ===== 系统基本信息 =====
[2025-09-17 21:29:11] CPU核心数: 48 (物理核心: 24)
[2025-09-17 21:29:11] 总内存: 251.56 GB
[2025-09-17 21:29:11] 初始可用内存: 199.05 GB
[2025-09-17 21:29:11] GPU 0: NVIDIA GeForce RTX 3090
[2025-09-17 21:29:11]   总显存: 24.00 GB
[2025-09-17 21:29:11]   初始可用显存: 16.81 GB
[2025-09-17 21:29:11] GPU 1: NVIDIA GeForce RTX 3090
[2025-09-17 21:29:11]   总显存: 24.00 GB
[2025-09-17 21:29:11]   初始可用显存: 21.52 GB
[2025-09-17 21:29:11] GPU 2: NVIDIA GeForce RTX 3090
[2025-09-17 21:29:11]   总显存: 24.00 GB
[2025-09-17 21:29:11]   初始可用显存: 21.52 GB
[2025-09-17 21:29:11] ========================

[2025-09-17 21:30:15] 
===== 批次 0 训练状态 =====
[2025-09-17 21:30:15] 损失值: nan
[2025-09-17 21:30:15] 准确率: 0.23918406665325165
[2025-09-17 21:30:15] ===========================
[2025-09-17 21:30:15] conv1d_5权重监控出错: No such layer: conv1d_5. Existing layers are: ['input1', 'input_monitor', 'time_distributed_cnn', 'cnn_output_monitor', 'gru_input_monitor', 'bidirectional_gru', 'gru_output_monitor', 'ffn_input_monitor', 'time_distributed_ffn', 'ffn_output_monitor'].
[2025-09-17 21:30:15] 训练过程出错: Graph execution error:

Detected at node 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics' defined at (most recent call last):
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 973, in _bootstrap
      self._bootstrap_inner()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
      self.run()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 1249, in run_step
      outputs = model.train_step(data)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 838, in train_step
      y_pred = self(x, training=True)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/rnn/time_distributed.py", line 246, in call
      y = self.layer(inputs, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/sequential.py", line 412, in call
      return super().call(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/core/lambda_layer.py", line 210, in call
      result = self.function(inputs, **kwargs)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 638, in <lambda>
      tf.debugging.check_numerics(x, f"conv1d_{ix_l*2 + 1}包含NaN/无穷大"),
Node: 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics'
Detected at node 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics' defined at (most recent call last):
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 973, in _bootstrap
      self._bootstrap_inner()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
      self.run()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 1249, in run_step
      outputs = model.train_step(data)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 838, in train_step
      y_pred = self(x, training=True)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/rnn/time_distributed.py", line 246, in call
      y = self.layer(inputs, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/sequential.py", line 412, in call
      return super().call(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/core/lambda_layer.py", line 210, in call
      result = self.function(inputs, **kwargs)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 638, in <lambda>
      tf.debugging.check_numerics(x, f"conv1d_{ix_l*2 + 1}包含NaN/无穷大"),
Node: 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics'
Detected at node 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics' defined at (most recent call last):
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 973, in _bootstrap
      self._bootstrap_inner()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
      self.run()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 1249, in run_step
      outputs = model.train_step(data)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 838, in train_step
      y_pred = self(x, training=True)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/rnn/time_distributed.py", line 246, in call
      y = self.layer(inputs, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/sequential.py", line 412, in call
      return super().call(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/core/lambda_layer.py", line 210, in call
      result = self.function(inputs, **kwargs)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 638, in <lambda>
      tf.debugging.check_numerics(x, f"conv1d_{ix_l*2 + 1}包含NaN/无穷大"),
Node: 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics'
Detected at node 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics' defined at (most recent call last):
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 973, in _bootstrap
      self._bootstrap_inner()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/threading.py", line 1016, in _bootstrap_inner
      self.run()
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 1249, in run_step
      outputs = model.train_step(data)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 838, in train_step
      y_pred = self(x, training=True)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/rnn/time_distributed.py", line 246, in call
      y = self.layer(inputs, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/training.py", line 558, in __call__
      return super().__call__(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/sequential.py", line 412, in call
      return super().call(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 512, in call
      return self._run_internal_graph(inputs, training=training, mask=mask)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/functional.py", line 669, in _run_internal_graph
      outputs = node.layer(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 65, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/engine/base_layer.py", line 1145, in __call__
      outputs = call_fn(inputs, *args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/utils/traceback_utils.py", line 96, in error_handler
      return fn(*args, **kwargs)
    File "/root/miniconda3/envs/deep-sound/lib/python3.10/site-packages/keras/layers/core/lambda_layer.py", line 210, in call
      result = self.function(inputs, **kwargs)
    File "/root/user/DeepSound2/src/chewbite_fusion/models/deep_sound.py", line 638, in <lambda>
      tf.debugging.check_numerics(x, f"conv1d_{ix_l*2 + 1}包含NaN/无穷大"),
Node: 'custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics'
4 root error(s) found.
  (0) INVALID_ARGUMENT:  conv1d_5包含NaN/无穷大 : Tensor had NaN values
	 [[{{node custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics}}]]
	 [[replica_2/custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_3_monitor/CheckNumerics/_1449]]
	 [[replica_2/broadcast_weights_1/assert_broadcastable/AssertGuard/else/_3698/replica_2/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_7/_2024]]
	 [[replica_1/broadcast_weights_1/assert_broadcastable/AssertGuard/else/_3675/replica_1/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_1/_1976]]
  (1) INVALID_ARGUMENT:  conv1d_5包含NaN/无穷大 : Tensor had NaN values
	 [[{{node custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics}}]]
	 [[replica_2/custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_3_monitor/CheckNumerics/_1449]]
	 [[replica_2/broadcast_weights_1/assert_broadcastable/AssertGuard/else/_3698/replica_2/broadcast_weights_1/assert_broadcastable/AssertGuard/Assert/data_7/_2024]]
  (2) INVALID_ARGUMENT:  conv1d_5包含NaN/无穷大 : Tensor had NaN values
	 [[{{node custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics}}]]
	 [[replica_2/custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_3_monitor/CheckNumerics/_1449]]
  (3) INVALID_ARGUMENT:  conv1d_5包含NaN/无穷大 : Tensor had NaN values
	 [[{{node custom_model/time_distributed_cnn/cnn_subnetwork/conv1d_1_monitor/CheckNumerics}}]]
0 successful operations.
0 derived errors ignored. [Op:__inference_train_function_48723]